#lang pie

; Question
; --------
; Correct the function in frame 73 to not always return 0, but to be factorial


; Answer
; ------
; Multiply and plus comes from ex-3
; The problem is the code is that (fact 0) is 1 not 0.

; The + eliminator
(claim step+ (-> Nat Nat Nat))
(define step+
  (位(dim-n-1 a-n-1)
    (add1 a-n-1)))

(claim + (-> Nat Nat Nat))
(define + (位(a b) (rec-Nat a b step+)))

; The * eliminator
(claim step* (-> Nat Nat Nat Nat))
(define step*
  (位(j dim-n-1 a-n-1)
    (+ j a-n-1)))

(claim * (-> Nat Nat Nat))
(define *(位(n b) (rec-Nat n 0 (step* b))))

; The step eliminator
(claim step-fact
  (-> Nat Nat
    Nat))
(define step-fact
  (lambda (n-1 almost)
    (* (add1 n-1) almost)))
(claim fact
  (-> Nat
    Nat))
(define fact
  (lambda (n)
    (rec-Nat n
      1
      step-fact)))

(check-same Nat (fact 3) 6)
(check-same Nat (fact 0) 1)
#lang pie

; Question
; --------
; Rewrite the definition of + (in frame 3.27) using the rec-Nat eliminator
; instead of the iter-Nat eliminator.

; Notes
; -----
; - rec-Nat is defined on page 89

; Answer
; ------
; Following the pattern of first defining the step function and then
; the actual function

; How can I identify the step function?
; What about induction:
; If n = 0 then
;   n + b = b ... the base case
; Else let a-n-1 = (n - 1) + b
;   n + b = (n - 1) + (b + 1) 
;         = (n - 1) + b + 1
;         = a-n-1 + 1 ... the step function!


; If we have the answer for n-1 (called a-n-1)
; the answer for n is a-n-1 + 1
(claim step-+ (-> Nat Nat Nat))
(define step-+
  (λ(dim-n-1 a-n-1)
    (add1 a-n-1)))

; Returns the sum of two Nats
(claim + (-> Nat Nat Nat))
(define +
  (λ(a b)
    (rec-Nat a
      ; a is zero
      b
      step-+)))

; some tests
(check-same Nat (+ 1 3) 4)
(check-same Nat (+ 0 0) 0)
(check-same Nat (+ 0 2) 2)
(check-same Nat (+ 2 0) 2)

    